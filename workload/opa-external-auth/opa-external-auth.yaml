#@ load("@ytt:base64", "base64")
#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

#! rego
#@ load("policy.rego.lib.txt", "rego_auth_policy")

---
apiVersion: v1
data:
  policy.rego: #@ base64.encode(rego_auth_policy())
kind: Secret
metadata:
  name: opa-policy
  namespace: apps
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa
  namespace: apps
  labels:
    app: opa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
      name: opa
    spec:
      containers:
      - name: opa
        image: openpolicyagent/opa:0.26.0-envoy-6
        ports:
        - name: http
          containerPort: 8181
        - name: auth
          containerPort: 9191
        args:
        - "run"
        - "--addr=0.0.0.0:8181"
        - "--set=plugins.envoy_ext_authz_grpc.addr=:9191"
        - "--set=plugins.envoy_ext_authz_grpc.query=data.envoy.authz.allow"
        - "--h2c"
        - "--ignore=.*"  #! exclude hidden dirs created by Kubernetes
        - "--log-level"
        - "debug"
        - "--log-format"
        - "text"
        - "--server"
        - "/policies"
        volumeMounts:
        - readOnly: true
          mountPath: /policies
          name: proxy-config
      volumes:
        - name: proxy-config
          secret:
            secretName: opa-policy
---
apiVersion: v1
kind: Service
metadata:
  name: opa-auth
  labels:
    app: opa
  namespace: apps
spec:
  type: ClusterIP
  ports:
  - port: 9191
    targetPort: auth
    protocol: TCP
    name: auth
  selector:
    app: opa
---
apiVersion: projectcontour.io/v1alpha1
kind: ExtensionService
metadata:
  name: opa
  namespace: apps
spec:
  protocol: h2c
  services:
  - name: opa-auth
    port: 9191
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-conformance-echo
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-conformance-echo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-conformance-echo
    spec:
      containers:
      - name: conformance-echo
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
        ports:
        - name: http-api
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-conformance-echo
  namespace: apps
spec:
  ports:
  - name: http
    port: 80
    targetPort: http-api
  selector:
    app.kubernetes.io/name: ingress-conformance-echo
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: echo
  namespace: apps
spec:
  virtualhost:
    fqdn: echo.apps.tanzuplatform.com
    tls:
      secretName: apps.tanzuplatform.com
    authorization:
      extensionRef:
        name: opa
        namespace: apps
  routes:
  - services:
    - name: ingress-conformance-echo
      port: 80
